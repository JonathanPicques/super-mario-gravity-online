[gd_resource type="Shader" format=2]

[resource]
resource_local_to_scene = true
code = "shader_type canvas_item; 

uniform vec4 color0 : hint_color;
uniform vec4 color1 : hint_color;
uniform vec4 color2 : hint_color;
uniform vec4 color3 : hint_color;

uniform vec4 skin_color0 : hint_color;
uniform vec4 skin_color1 : hint_color;
uniform vec4 skin_color2 : hint_color;
uniform vec4 skin_color3 : hint_color;


const vec3 base_clothes_color0 = vec3(0.29803921568, 0.06274509803, 0.06274509803);
const vec3 base_clothes_color1 = vec3(0.52549019607, 0.06274509803, 0.06274509803);
const vec3 base_clothes_color2 = vec3(0.64705882352, 0.08235294117, 0.08235294117);
const vec3 base_clothes_color3 = vec3(0.90588235294, 0.18431372549, 0.18431372549);

const vec3 base_skin_color0 = vec3(0.21176470588, 0.34117647058, 0.16078431372);
const vec3 base_skin_color1 = vec3(0.35294117647, 0.5725490196, 0.26666666666);
const vec3 base_skin_color2 = vec3(0.36470588235, 0.70980392156, 0.23137254902);
const vec3 base_skin_color3 = vec3(0.49019607843, 0.80392156862, 0.2);

const float TOLERANCE = 0.1; 

bool almost_equal(vec3 a, vec3 b, float tolerance) {
	vec3 result = abs(a - b);
	return result.x < TOLERANCE && result.y < TOLERANCE && result.z < TOLERANCE;
}

void fragment() {
	
	COLOR = texture(TEXTURE, UV);

	// accent color
	COLOR.rgb = mix(COLOR.rgb, color0.rgb, float(almost_equal(COLOR.rgb, base_clothes_color0, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, color1.rgb, float(almost_equal(COLOR.rgb, base_clothes_color1, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, color2.rgb, float(almost_equal(COLOR.rgb, base_clothes_color2, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, color3.rgb, float(almost_equal(COLOR.rgb, base_clothes_color3, TOLERANCE)));
	
	// skin color
	COLOR.rgb = mix(COLOR.rgb, skin_color0.rgb, float(almost_equal(COLOR.rgb, base_skin_color0, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, skin_color1.rgb, float(almost_equal(COLOR.rgb, base_skin_color1, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, skin_color2.rgb, float(almost_equal(COLOR.rgb, base_skin_color2, TOLERANCE)));
	COLOR.rgb = mix(COLOR.rgb, skin_color3.rgb, float(almost_equal(COLOR.rgb, base_skin_color3, TOLERANCE)));
}"
